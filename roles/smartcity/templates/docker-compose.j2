version: "3.3"
services:
  cadvisor:
     image: google/cadvisor:latest
     container_name: cadvisor
     ports:
      - "30000:8080"
     privileged: true
     volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
     depends_on:
      - consul
      - registrator
  minifi:
    image: ncar-im-0.rc.unr.edu/minifi #apache-nifi-minifi-cpp:0.5.0 #minifi
    #build: ./minifi
    volumes:
      - type: bind
        source: ${BASE_PATH}/minifi/process.yml
        target: /opt/minifi/minifi-0.5.0/conf/config.yml #minifi-0.5.0
      - type: bind
        source: /data
        target: /data
      - type: bind
        source: ${BASE_PATH}/minifi/provenance_repository
        target: /opt/minifi/minifi-0.5.0/provenance_repository
      - type: bind
        source: ${BASE_PATH}/minifi/flowfile_repository
        target: /opt/minifi/minifi-0.5.0/flowfile_repository
      - type: bind
        source: ${BASE_PATH}/minifi/content_repository
        target: /opt/minifi/minifi-0.5.0/content_repository
    network_mode: "host"
  consul:
     image: consul:1.5
     command: "agent -retry-join=\"ncar-im-5.rc.unr.edu:8301\" -hcl=\"ports {serf_lan=8312}\" -client=${HOST_IP} -advertise=${HOST_IP}"
     container_name: consul
     hostname: $HOSTNAME
     network_mode: host
     #ports:
     # - "8312:8312"
     # - "8312:8312/udp"
     # - "8300:8300"
     # - "8301:8301"
     # - "8302:8302"
     # - "8400:8400"
     # - "8500:8500"
     # - "8600:8600"
     # - "8600:8600/udp"
  registrator:
    image: gliderlabs/registrator:latest
    command: "-internal=false -ip=\"${HOST_IP}\" consul://${HOST_IP}:8500"
    container_name: registrator
    hostname: registrator
    depends_on:
      - consul
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
    - testor=$HOSTNAME
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.3.2
    user: "0"
    volumes:
      - type: bind
        source: ${BASE_PATH}/elasticsearch/filebeat.docker.yml
        target: /usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["filebeat", '-e', '-strict.perms=false']
  filebeatnetflow:
    image: docker.elastic.co/beats/filebeat:7.3.2
    user: "0"
    network_mode: host
    volumes:
      - type: bind
        source: ${BASE_PATH}/elasticsearch/filebeat.netflow.yml
        target: /usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["filebeat", '-e', '-strict.perms=false']
  node-exporter:
    image: quay.io/prometheus/node-exporter
    #ports:
    #  - '9100:9100'
    command:
       - '--path.rootfs=/host'
       - "--collector.textfile.directory=/text"
       - '--path.procfs=/host/proc'
       - '--path.sysfs=/host/sys'
       - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
            - /:/rootfs:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - ${BASE_PATH}/text:/text
    network_mode: "host"
{% for index in ["one","two"] %}
  pcl{{ deployments[index].id }}:
        image: {{pclProcessingImage}} #ncar-da-0.rc.unr.edu:5000/pclmqttserve
        #build: ./pcap-processing/pcl
        network_mode: "host"
        restart: always
        command: ['-nport','{{ deployments[index].nmeaPort }}','-mhost','134.197.75.31','-mport','30041','-topic','{{deployments[index].mqtttopic}}','-ip','{{deployments[index].ip}}','-port','{{deployments[index].dataPort}}','-config','{{deployments[index].lidarConfig}}']
        environment:
        - PCL_IP={{deployments[index].ip}} #192.168.1.11
        - PCL_PORT={{deployments[index].dataPort}}
        - PCL_CONFIG={{deployments[index].lidarConfig}} #/velodyne/build/VLP-16.xml -- this is stored in the docker container TODO: Need to make stored elsewhere!?
        - MQTT_TOPIC={{deployments[index].mqtttopic}} #test
        - MQTT_IP=134.197.75.31
        - MQTT_PORT=30041
        #- PCAP_FILE=/data/test/test.pcap
        volumes:
            - type: bind
              source: /home/edge/infrastructure/data
              target: /data
        #deploy:
        #  resources: 
        #     limits:
        #       memory: 300M
        #     reservations:
        #       memory: 30M

  pcap{{ deployments[index].id }}:
        image: {{pcapCaptureImage}} #ncar-da-0.rc.unr.edu/pcapcapture
        #build: ./pcap-processing/pcap
        network_mode: "host"
        volumes:
          - type: bind
            source: /data
            target: /data
        #volumes:
        #    - ./data:/data
        environment:
        - INTERFACE={{deployments[index].interface}}
        - MIN=3600 # listen to this interface for a default of 60 seconds
        - IP={{deployments[index].ip}} #192.168.1.11
        - STATE=Nevada
        - CITY=Reno
        - STREET=Virginia
        - CROSSSTREET={{deployments[index].crossStreet}} #15th
        - CORNER={{deployments[index].corner}} #SE
        - SENSORID={{deployments[index].id}} # int
        - SENSORMODEL={{deployments[index].model}} #VLP-16
        - SITEID={{deployments[index].siteId}} #0
        - DEPLOYMENTID={{deployments[index].deploymentId}} #0,1
{% endfor %}

