#- name: Get docker registry certificates from kubernetes
- name: Ensures /etc/docker/certs.d/ncar-da-1.rc.unr.edu dir exists
  become: yes
  file: path=/etc/docker/certs.d/ncar-da-1.rc.unr.edu state=directory

- name: Pass over ssl certificates for private docker registry
  become: yes
  copy:
    src: certs/
    dest: /etc/docker/certs.d/ncar-da-1.rc.unr.edu/

- name: Create a infrastructure directory if it does not exist
  file:
    path: /home/edge/infrastructure
    state: directory
- name: Create a data directory if it does not exist
  become: yes
  file:
    owner: edge
    group: edge
    path: /data
    state: directory
- name: Create a data/pcap directory if it does not exist
  file:
    owner: edge
    group: edge
    path: /data/active
    state: directory
- name: Create a data/pcap directory if it does not exist
  file:
    owner: edge
    group: edge
    path: /data/pcap
    state: directory
- name: Create a elasticsearch directory if it does not exist
  file:
    path: /home/edge/infrastructure/elasticsearch
    state: directory
- name: Create a directory if it does not exist
  file:
    path: /home/edge/infrastructure/minifi
    state: directory
- name: Create a directory if it does not exist
  file:
    path: /home/edge/infrastructure/minifi/content_repository
    state: directory
- name: Create a directory if it does not exist
  file:
    path: /home/edge/infrastructure/minifi/flowfile_repository
    state: directory
- name: Create a directory if it does not exist
  file:
    path: /home/edge/infrastructure/minifi/provenance_repository
    state: directory
- name: create text directory if it does not exist
  file:  
    path: /home/edge/infrastructure/text
    state: directory
- name: Adding configuration files to edge device
  copy: 
    src: configurationfiles/filebeat.docker.yml
    dest:  /home/edge/infrastructure/elasticsearch/filebeat.docker.yml

- name: Adding configuration files to edge device
  copy: 
    src: configurationfiles/filebeat.netflow.yml
    dest:  /home/edge/infrastructure/elasticsearch/filebeat.netflow.yml

- name: copying configuration files to edge device
  copy: 
    src: configurationfiles/process.yml
    dest:  /home/edge/infrastructure/minifi/process.yml
    
- name: "Creating docker compose file"
  template:
    src: docker-compose.j2
    dest: "/home/edge/infrastructure/docker-compose-infrastructure.yml"
- name: "create startup script."
  copy:
    src: "files/startcapture.sh"
    dest: "/home/edge/infrastructure/startcapture.sh"
- name: "Creating smb credentials file."
  template:
    src: smb-credentials.j2
    dest: "/home/edge/.smbcredentials"

- name: "copy over automount for im storage"
  become: yes
  copy:
    src: "files/mnt-imstorage.automount"
    dest: "/etc/systemd/system/mnt-imstorage.automount"

- name: "copy over mount for im storage"
  become: yes
  copy:
    src: "files/mnt-imstorage.mount"
    dest: "/etc/systemd/system/mnt-imstorage.mount"

#- name: "enable mnt-imstorage.mount"
#  become: yes
#  systemd:
#    name: mnt-imstorage.automount
#    enabled: yes
    
#- name: "start mnt-imstorage.automount"
#   become: yes
#   systemd:
#    name: mnt-imstorage.automount
#    state: started

- name: "enable mnt-imstorage.automount"
  become: yes
  systemd:
    name: mnt-imstorage.automount
    #state: started
    enabled: yes

- name: "create scripts directory"
  file:
    path: "/home/edge/scripts/"
    state: directory

- name: "adding move files script"
  copy:
    src: "files/movefiles.sh"
    dest: "/home/edge/scripts/movefiles.sh"
    owner: "edge"
    group: "edge"

- name: "copying smartmon.sh into scripts directory"
  copy:
    src: "files/smartmon.sh"
    dest: "/home/edge/scripts/smartmon.sh"
    mode: u+rwx

- name: "adding cronjob in root"
  become: yes
  cron:
    name: "grabbing smart health"
    minute: "*/5"
    job: "/home/edge/scripts/smartmon.sh > /home/edge/infrastructure/text/smart_metrics.prom"
